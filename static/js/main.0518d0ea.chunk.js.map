{"version":3,"sources":["styles/constants.js","styles/globalStyles.js","components/Background/Background.elements.js","components/Background/index.js","components/Playlist/Playlist.elements.js","components/Playlist/PlayListItem.js","redux/trackSlice.js","components/Playlist/index.js","components/MusicCard/MusicCard.elements.js","components/MusicCard/index.js","components/Player/Player.elements.js","components/Player/index.js","tracks.js","App.js","redux/store.js","index.js"],"names":["COLORS","opacity","GlobalStyle","createGlobalStyle","GlassContainer","styled","div","padding","height","width","dir","CustomScrollBar","AppLayout","Bubble","size","top","bottom","left","right","MainContainer","Background","children","PlaylistHeading","h1","PlaylistBody","ul","PlaylistImg","img","PlaylistSongName","p","PlaylistSongLength","PlaylistItemContainer","li","isCurrent","PlayListItem","id","onClick","name","useSelector","state","tracks","track","byId","length","len","src","alt","trackSlice","createSlice","initialState","currentTrackIndex","ids","reducers","tracksLoaded","action","payload","forEach","push","trackChanged","indexOf","trackStopped","nextTrack","prevTrack","actions","PlayList","tracksList","currentTrackId","dispatch","useDispatch","map","setTrack","MusicCardImage","MusicCardTitle","h2","MusicCard","title","PlayerControls","ControlIcon","AudioTrack","input","attrs","type","progress","Time","TotalTime","span","Player","audioSrc","audioRef","useRef","intervalRef","useState","isPlaying","setIsPlaying","currentTrack","setCurrentTrack","trackLength","setTrackLength","useEffect","current","Audio","addEventListener","e","duration","a","play","pause","startTimer","clearInterval","setInterval","ended","next","currentTime","then","_","console","log","catch","err","convertTime","seconds","Math","floor","ceil","toLocaleString","minimumIntegerDigits","onScrubEnd","style","gridArea","s","value","min","max","onChange","target","onMouseUp","onKeyUp","App","store","configureStore","reducer","tracksReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0518d0ea.chunk.js","sourcesContent":["export const COLORS = {\n    primary1: '#6042FC',\n    primary2: '#38DBFC',\n    primary3: '#95ACE0',\n    timer: '#3594DD',\n    white: (opacity = 1.0) => `rgba(255, 255, 255, ${opacity})`\n}","import styled, { createGlobalStyle } from 'styled-components';\nimport { COLORS } from './constants';\n\nconst GlobalStyle = createGlobalStyle`\n    * {\n        box-sizing: border-box;\n        margin: 0;\n        padding: 0;\n    }\n\n    html {\n        font-size: 62.5%;\n\n        --color-primary-1: ${COLORS.primary1};\n        --color-primary-2: ${COLORS.primary2};\n        --color-primary-3: ${COLORS.primary3};\n\n        --color-white-lite: ${COLORS.white(0.2)};\n        --color-white-opaque: ${COLORS.white(0.8)};\n\n        --font-fam: 'Rubik', sans-serif;\n        --root-font-size: 1.8rem;\n\n        --gradient-border-dir: to right bottom;\n        --gradient-border-col-1: ${COLORS.white(1)};\n        --gradient-border-col-2: ${COLORS.white(0.2)};\n    }\n\n    body {\n        font-size: var(--root-font-size);\n        font-family: var(--font-fam);\n        color: ${COLORS.white()};\n    }\n`;\n\nexport const GlassContainer = styled.div`\n    background: linear-gradient(\n        to right bottom, var(--color-white-opaque), var(--color-white-lite)\n    );\n    padding: ${({ padding }) => padding || '3rem'};\n    border-radius: 20px;\n    border: 1px solid var(--color-white-lite);\n    \n    position: relative;\n    height: ${({ height }) => height || 'fit-content'};\n    width: ${({ width }) => width || 'fit-content'};\n    \n    display: flex;\n    flex-direction: ${({ dir }) => dir || 'column'};\n    justify-content: center;\n    align-items: center;\n\n    backdrop-filter: blur(15px);\n    max-height: 45rem;\n\n    @media screen and (max-width: 60rem) {\n        width: 100%;\n    }\n`;\n\nexport const CustomScrollBar = styled.div`\n    & * {\n        ::-webkit-scrollbar {\n            width: .3rem;\n        }\n        \n        ::-webkit-scrollbar-track {\n            background-color: ${COLORS.white(0.4)};\n        }\n        \n        ::-webkit-scrollbar-thumb {\n            background-color: ${COLORS.white(1)};\n            display: block;\n            width: .5rem;\n        }\n    }\n`;\n\nexport const AppLayout = styled.div`\n    display: grid;\n    width: max-content;\n    place-content: center;\n    align-items: stretch;\n    gap: 10px;\n\n    grid-template-areas: \n        'current playlist'\n        'player player'\n    ;\n\n    @media screen and (max-width: 60rem) {\n        grid-template-areas: \n            'current'\n            'player'\n            'playlist'\n        ;\n    }\n`;\n\nexport default GlobalStyle;","import styled from 'styled-components';\n\nexport const Bubble = styled.div`\n    /* linear gradient */\n    background: linear-gradient(\n        to bottom, var(--color-white-opaque), var(--color-white-lite)\n    );\n\n    /* size related */\n    width: ${({ size }) => size || '250px'};\n    height: ${({ size }) => size || '250px'};\n    border-radius: 50%;\n\n    /* Position related props */\n    position: absolute;\n    top: ${({ top }) => top || 'none'};\n    bottom: ${({ bottom }) => bottom || 'none'};\n    left: ${({ left }) => left || 'none'};\n    right: ${({ right }) => right || 'none'};\n`;\n\nexport const MainContainer = styled.div`\n    height: 100vh;\n    width: 100vw;\n    background: linear-gradient(to top left, var(--color-primary-1), var(--color-primary-2));\n    position: relative;\n    overflow: hidden;\n    background-position: 50% 50%;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    &::before {\n        --size: 90rem;\n        --offset: 30rem;\n\n        content: '';\n        position: absolute;\n        height: var(--size);\n        width: var(--size);\n        bottom: calc(-1 * var(--offset));\n        right: calc(-1 * var(--offset));\n\n        background: linear-gradient(to top left, var(--color-primary-3) 40%, var(--color-primary-2) 85%);\n        filter: blur(20px);\n        border-radius: 50%;\n    }\n\n    @media screen and (max-width: 60rem) {\n        overflow-y: auto;\n        height: auto;\n        padding: 2rem 0;\n\n        &::before {\n            display: none;\n        }\n    }\n`;","import React from 'react';\nimport { Bubble, MainContainer } from './Background.elements';\n\nconst Background = ({ children }) => {\n    return (\n      <MainContainer>\n        <Bubble\n          bottom=\"10rem\"\n          left=\"-3rem\"\n        />\n        <Bubble\n          right=\"-3rem\"\n          top=\"2rem\"\n        />\n        {children}\n      </MainContainer>\n    );\n}\n \nexport default Background;","import styled from 'styled-components';\nimport { COLORS } from '../../styles/constants';\n\nexport const PlaylistHeading = styled.h1`\n    color: ${COLORS.white()};\n    font-weight: bold;\n`;\n\nexport const PlaylistBody = styled.ul`\n    height: 35rem;\n    width: 40rem;\n    list-style: none;\n    margin-top: 1rem;\n    overflow-y: scroll;\n`;\n\nexport const PlaylistImg = styled.img`\n    height: 5rem;\n    width: 5rem;\n    border-radius: 4px;\n    object-fit: cover;\n`;\n\nexport const PlaylistSongName = styled.p`\n    font-size: 2rem;\n    font-weight: bold;\n    width: 100%;\n    margin: 0 1rem;\n`;\n\nexport const PlaylistSongLength = styled.p`\n    font-size: 2rem;\n    font-weight: bold;\n`;\n\nexport const PlaylistItemContainer = styled.li`\n    padding: 1rem;\n    margin-right: 1.5rem;\n\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    background: ${({ isCurrent }) => isCurrent ? `${COLORS.white(0.8)}` : `inherit`};\n    color: ${({ isCurrent }) => isCurrent ? `${COLORS.timer}` : `inherit`};\n    position: relative;\n\n    &:not(:last-of-type) {\n        border-bottom: 1px solid ${COLORS.white(0.5)};\n    }\n\n    &:hover {\n        cursor: pointer;\n        background: ${COLORS.white(0.3)};\n    }\n\n    &::before {\n        content: '';\n        display: ${({ isCurrent }) => isCurrent ? 'block' : 'none'};\n        position: absolute;\n        left: 0;\n        top: 0;\n        bottom: 0;\n        width: 5px;\n        background-color: ${COLORS.timer};\n    }\n`;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { PlaylistImg, PlaylistItemContainer, PlaylistSongLength, PlaylistSongName } from './Playlist.elements';\n\nconst PlayListItem = ({ id, onClick, isCurrent }) => {\n    const name = useSelector(state => state.tracks.track.byId[id].name)\n    const length = useSelector(state => state.tracks.track.byId[id].len)\n    const img = useSelector(state => state.tracks.track.byId[id].img)\n\n    return (\n        <PlaylistItemContainer onClick={onClick} isCurrent={isCurrent}>\n            <PlaylistImg src={img} alt=\"random img\" />\n            <PlaylistSongName>\n                {name}\n            </PlaylistSongName>\n            <PlaylistSongLength>\n                {length}\n            </PlaylistSongLength>\n        </PlaylistItemContainer>\n    );\n}\n \nexport default PlayListItem;","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    currentTrackIndex: 0,\n    track: {\n        byId: {},\n        ids: []\n    }\n};\n\nconst trackSlice = createSlice({\n    name: 'track',\n    initialState,\n    reducers: {\n        tracksLoaded(state, action) {\n            action.payload.forEach(track => {\n                state.track.byId[track.id] = track;\n                state.track.ids.push(track.id);\n            })\n        },\n        trackChanged(state, action) {\n            state.currentTrackIndex = state.track.ids.indexOf(action.payload);\n        },\n        trackStopped(state, action) {\n            state.currentTrackIndex = null;\n        },\n        nextTrack(state) {\n            state.currentTrackIndex = (state.currentTrackIndex + 1) % state.track.ids.length;\n        },\n        prevTrack(state) {\n            if(state.currentTrackIndex !== 0) state.currentTrackIndex--;\n            else state.currentTrackIndex = state.track.ids.length - 1;\n        }\n    }\n})\n\nexport const { tracksLoaded, trackChanged, trackStopped, nextTrack, prevTrack } = trackSlice.actions;\n\nexport default trackSlice.reducer;","import React from 'react';\nimport { CustomScrollBar, GlassContainer } from '../../styles/globalStyles';\nimport { PlaylistHeading, PlaylistBody } from './Playlist.elements';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PlayListItem from './PlayListItem';\nimport { trackChanged } from '../../redux/trackSlice';\n\nconst PlayList = () => {\n    const tracksList = useSelector(state => state.tracks.track.ids);\n    const currentTrackId = useSelector(state => state.tracks.track.ids[state.tracks.currentTrackIndex]);\n    const dispatch = useDispatch();\n\n    const setTrack = (id) => {\n        dispatch(trackChanged(id));\n    }\n\n    return (\n        <GlassContainer padding=\"1.5rem 3rem 3rem\">\n            <PlaylistHeading>Songs List</PlaylistHeading>\n            <CustomScrollBar>\n                <PlaylistBody>\n                    {tracksList.map((id) => (\n                        <PlayListItem id={id} key={id} onClick={() => setTrack(id)} isCurrent={currentTrackId === id}/>\n                    ))}\n                </PlaylistBody>\n            </CustomScrollBar>\n        </GlassContainer>\n    );\n}\n \nexport default PlayList;","import styled from 'styled-components';\n\nexport const MusicCardImage = styled.img`\n    --size: 35rem;\n\n    width: var(--size);\n    height: var(--size);\n    object-fit: cover;\n\n    border-radius: 8px;\n    border: 1px solid white;\n`;\n\nexport const MusicCardTitle = styled.h2`\n    font-weight: bold;\n\n    --size: 30rem;\n    max-width: var(--size);\n    \n    text-align: center;\n    margin-top: 1rem;\n\n    word-break: break-word;\n`;","import React from 'react';\nimport { GlassContainer } from '../../styles/globalStyles';\nimport { MusicCardImage, MusicCardTitle } from './MusicCard.elements';\nimport { useSelector } from 'react-redux';\nconst fallBackImg = `/images/seth-doyle-wYrByI2RKx8-unsplash.jpeg`;\n\nconst MusicCard = () => {\n    const img = useSelector(\n        ({ tracks: { track, currentTrackIndex }  }) => track.byId[track.ids[currentTrackIndex]]?.img\n    );\n\n    const title = useSelector(\n        ({ tracks: { track, currentTrackIndex } }) => {\n            return track.byId[track.ids[currentTrackIndex]]?.name;\n        }\n    );\n\n    return (\n        <>\n            <GlassContainer padding=\"1.5rem\">\n                <MusicCardImage src={img || fallBackImg}/>\n                <MusicCardTitle>{title || \"Click on the track to play it\"}</MusicCardTitle>\n            </GlassContainer>\n        </>\n    );\n}\n \nexport default MusicCard;","import styled from 'styled-components';\nimport { COLORS } from '../../styles/constants';\n\nexport const PlayerControls = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const ControlIcon = styled.div`\n    padding: 1rem;\n    display: grid;\n    place-items: center;\n\n    &:hover {\n        cursor: pointer;\n        background-color: ${COLORS.white(0.4)};\n    }\n`;\n\nexport const AudioTrack = styled.input.attrs({\n    type: 'range'\n})`\n    height: 5px;\n    -webkit-appearance: none;\n    width: 100%;\n    margin: 10px 0;\n    border-radius: 8px;\n    background: ${({ progress }) => \n        `linear-gradient(to right, ${COLORS.white(1)} ${progress}%, ${COLORS.white(0.4)} ${progress}%)`\n    };\n    cursor: pointer;\n\n    &::-webkit-slider-thumb {\n        -webkit-appearance: none;\n\n        transition: all 0.2s;\n        --size: 10px;\n        &:hover {\n            transform: scale(2);\n        }\n\n        width: var(--size);\n        height: var(--size);\n        border-radius: 50%;\n        background-color: ${COLORS.timer};\n        box-shadow: 0px 0px 4px ${COLORS.timer};\n    }\n`;\n\nexport const Time = styled.p`\n    color: ${COLORS.white()}\n`;\n\nexport const TotalTime = styled.span`\n    color: ${COLORS.timer}\n`;","import React, { useEffect, useRef, useState } from 'react';\nimport { GlassContainer } from '../../styles/globalStyles';\nimport { PlayerControls, ControlIcon, AudioTrack, Time, TotalTime } from './Player.elements';\nimport { FaPlay, FaPause, FaFastForward, FaFastBackward } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nextTrack, prevTrack } from '../../redux/trackSlice';\n\nconst Player = () => {\n    // audio src selected from the state\n    const audioSrc = useSelector(\n        ({ tracks: { track, currentTrackIndex } }) => track.byId[track.ids[currentTrackIndex]]?.src\n    );\n    const currentTrackIndex = useSelector(state => state.tracks.currentTrackIndex);\n    const dispatch = useDispatch();\n\n    // audio ref used to change the audio\n    const audioRef = useRef();\n    // interval ref used to control the timer component\n    const intervalRef = useRef();\n\n    // state of the player\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [currentTrack, setCurrentTrack] = useState(0);\n    const [trackLength, setTrackLength] = useState(100);\n\n    // change audio when track changed\n    useEffect(() => {\n        audioRef.current = new Audio(audioSrc);\n        audioRef.current?.addEventListener('loadedmetadata', e => {\n            setTrackLength(audioRef.current.duration);\n        })\n        setIsPlaying(true);\n        (async () => {\n            await audioRef.current.play();\n        })()\n        setCurrentTrack(0);\n\n        return () => {\n            audioRef.current.pause();\n            setIsPlaying(false);\n        }\n    }, [audioSrc, currentTrackIndex]);\n\n    // start timer \n    const startTimer = () => {\n        clearInterval(intervalRef.current);\n\n        intervalRef.current = setInterval(() => {\n            if (audioRef.current.ended) {\n                next();\n                clearInterval(intervalRef.current);\n                setIsPlaying(false);\n                // console.log('Ended');\n            } else {\n                setCurrentTrack(audioRef.current.currentTime);\n                // console.log(audioRef.current.currentTime);\n            }\n        }, 1000);\n    }\n\n    // pause/play logic\n    useEffect(() => {\n        if(audioRef.current) {\n            if(isPlaying) {\n                audioRef.current.play()\n                    .then(_ => {\n                        console.log('Player started');\n                    })\n                    .catch(err => console.log(err))\n                ;\n\n                startTimer();\n            } else {\n                audioRef.current.pause()\n                clearInterval(intervalRef.current);\n            }\n        };\n    }, [isPlaying]);\n\n    // show time in correct format\n    const convertTime = (seconds) => {\n        return `${Math.floor(seconds / 60)}:${\n            Math.ceil(seconds % 60).toLocaleString('en-US', {\n                minimumIntegerDigits: 2\n            })\n        }`;\n    }\n\n    // toggle play/pause\n    const togglePlay = () => setIsPlaying(s => !s);\n    \n    // when user is sliding the slider\n    const onScrub = (e) => {\n        clearInterval(intervalRef.current);\n        audioRef.current.currentTime = e.target.value;\n        setCurrentTrack(e.target.value);\n    }\n\n    // when user stops sliding the slider\n    const onScrubEnd = () => {\n        if(!isPlaying) {\n            setIsPlaying(true)\n        }\n        startTimer();\n    }\n\n    // previous and next tracks\n    const prev = () => {\n        audioRef.current.pause();\n        setIsPlaying(false);\n        setCurrentTrack(0);\n        dispatch(prevTrack());\n    }\n\n    const next = () => {\n        audioRef.current.pause();\n        setIsPlaying(false);\n        setCurrentTrack(0);\n        dispatch(nextTrack());\n    }\n\n    return (\n        <GlassContainer padding=\"1rem 3rem\" width=\"100%\" style={{ gridArea: 'player' }}>\n            <PlayerControls>\n                <ControlIcon onClick={prev}>\n                    <FaFastBackward />\n                </ControlIcon>\n                <ControlIcon onClick={togglePlay}>\n                    {!isPlaying ? <FaPlay /> : <FaPause />}\n                </ControlIcon>\n                <ControlIcon onClick={next}>\n                    <FaFastForward />\n                </ControlIcon>\n            </PlayerControls>\n            <AudioTrack \n                progress={currentTrack / trackLength * 100}\n                value={currentTrack} min=\"0\" max={trackLength}\n                onChange={onScrub}\n                onMouseUp={onScrubEnd}\n                onKeyUp={onScrubEnd}\n            />\n            <Time>{convertTime(currentTrack)}<TotalTime> / {convertTime(trackLength)}</TotalTime></Time>\n        </GlassContainer>\n    );\n}\n \nexport default Player;","export const tracks = [\n    {\n        id: 1,\n        name: 'ATTACK ON TITAN - Full English Opening 1 (Guren No Yumiya) Cover by Jonathan Young',\n        src: '/music/ATTACK ON TITAN - Full English Opening 1 (Guren No Yumiya) Cover by Jonathan Young feat.m4a',\n        img: 'https://i.ytimg.com/vi/o-IzvO-F5QA/maxresdefault.jpg',\n        len: '05:01'\n    },\n    {\n        id: 2,\n        name: 'Bring Me To Life - Evanescence (Cover by Jonathan Young)',\n        src: '/music/Bring Me To Life - Evanescence (Cover by Jonathan Young).m4a',\n        img: 'https://i.ytimg.com/vi/PeErlxmqD0s/maxresdefault.jpg',\n        len: '03:45'\n    },\n    {\n        id: 3,\n        name: \"Everybody's Fool\",\n        src: '/music/Everybody\\'s Fool.m4a',\n        img: 'https://i.ytimg.com/vi/jhC1pI76Rqo/maxresdefault.jpg',\n        len: '03:15'\n    },\n    {\n        id: 4,\n        name: 'Steins;Gate Ending (Toki Tsukasadoru Juuni no Meiyaku)',\n        src: '/music/Steins;Gate Ending (Toki Tsukasadoru Juuni no Meiyaku).m4a',\n        img: 'https://i.ytimg.com/vi/SQBHr1kGmT0/maxresdefault.jpg',\n        len: '05:08'\n    },\n    {\n        id: 5,\n        name: 'TV On The Radio - DLZ [Breaking Bad OST] [HQ]',\n        src: '/music/TV On The Radio - DLZ [Breaking Bad OST] [HQ].m4a',\n        img: 'https://i.ytimg.com/vi/qJlGXlNgtok/maxresdefault.jpg',\n        len: '03:48'\n    },\n    {\n        id: 6,\n        name: 'Unknown Brain - Say Goodbye (ft. Marvin Divine) [NCS Release]',\n        src: '/music/Unknown Brain - Say Goodbye (ft. Marvin Divine) [NCS Release].m4a',\n        img: 'https://i.ytimg.com/vi/rdD-DMTWqU4/maxresdefault.jpg',\n        len: '03:50'\n    },\n    {\n        id: 7,\n        name: 'Warriyo - Mortals (feat. Laura Brehm)',\n        src: '/music/Warriyo - Mortals (feat. Laura Brehm).m4a',\n        img: 'https://i1.sndcdn.com/artworks-000297379842-vuugmx-t500x500.jpg',\n        len: '03:49'\n    }\n];","import GlobalStyle, { AppLayout } from './styles/globalStyles';\nimport { Background as MainWrapper, MusicCard, PlayList, Player } from './components';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { tracks } from './tracks';\nimport { tracksLoaded } from './redux/trackSlice';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(tracksLoaded(tracks))\n  }, [dispatch]);\n\n  return (\n    <>\n      <GlobalStyle />\n      <MainWrapper>\n        <AppLayout>\n          <MusicCard/>\n          <PlayList/>\n          <Player/>\n        </AppLayout>\n      </MainWrapper>\n    </>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport tracksReducer from './trackSlice';\n\nexport const store = configureStore({\n    reducer: {\n        tracks: tracksReducer\n    }\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}